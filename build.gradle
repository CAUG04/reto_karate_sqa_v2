plugins {
    id 'java'
    id 'idea'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
// Centralizar versiones
ext {
    karateVersion = '1.3.0'
    junitVersion = '5.9.0'
    restAssuredVersion = '5.3.0'
    cucumberReportingVersion = '5.7.4'
    slf4jVersion = '2.0.7'
}

dependencies {
    // Karate
    testImplementation "com.intuit.karate:karate-junit5:${karateVersion}"
    testImplementation "com.intuit.karate:karate-core:${karateVersion}"

    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

    // Rest Assured
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"

    // Cucumber Reporting
    testImplementation "net.masterthought:cucumber-reporting:${cucumberReportingVersion}"

    // Logging
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    // Opcional: Añade estas dependencias para más funcionalidad
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
}

sourceSets {
    test {
        resources {
            srcDirs = [
                    'src/test/java',
                    'src/test/resources'
            ]
            exclude '**/*.java'
        }
    }
}

// Configuración de compilación
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Tarea de Karate Debug
tasks.register('karateDebug', JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set('com.intuit.karate.cli.M')
}

// Configuración de pruebas
test {
    useJUnitPlatform {
        // Puedes añadir tags específicos si los necesitas
        // includeTags 'smoke', 'regression'
    }

    // Propiedades del sistema para Karate
    systemProperty "karate.options", System.getProperty("karate.options", "")
    systemProperty "karate.env", System.getProperty("karate.env", "dev")

    // Configuración de logging de pruebas
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }

    outputs.upToDateWhen { false }
}